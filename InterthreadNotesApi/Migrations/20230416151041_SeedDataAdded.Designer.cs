// <auto-generated />
using System;
using InterthreadNotesApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InterthreadNotesApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230416151041_SeedDataAdded")]
    partial class SeedDataAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InterthreadNotesApi.Entities.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<DateTime>("NoteCreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NoteId");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            NoteId = 1,
                            NoteCreatedTimestamp = new DateTime(2023, 4, 17, 1, 10, 41, 33, DateTimeKind.Local).AddTicks(4951),
                            NoteText = "UserJJB1TestNote1",
                            UserId = 1
                        },
                        new
                        {
                            NoteId = 2,
                            NoteCreatedTimestamp = new DateTime(2023, 4, 17, 1, 10, 41, 33, DateTimeKind.Local).AddTicks(4973),
                            NoteText = "UserJJB1TestNote2",
                            UserId = 1
                        },
                        new
                        {
                            NoteId = 3,
                            NoteCreatedTimestamp = new DateTime(2023, 4, 17, 1, 10, 41, 33, DateTimeKind.Local).AddTicks(4982),
                            NoteText = "UserJJB2TestNote1",
                            UserId = 2
                        },
                        new
                        {
                            NoteId = 4,
                            NoteCreatedTimestamp = new DateTime(2023, 4, 17, 1, 10, 41, 33, DateTimeKind.Local).AddTicks(4990),
                            NoteText = "UserJJB3TestNote1",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("InterthreadNotesApi.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "UserJJB1"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "UserJJB2"
                        },
                        new
                        {
                            UserId = 3,
                            UserName = "UserJJB3"
                        });
                });

            modelBuilder.Entity("InterthreadNotesApi.Entities.Note", b =>
                {
                    b.HasOne("InterthreadNotesApi.Entities.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InterthreadNotesApi.Entities.User", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
